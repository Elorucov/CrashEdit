<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Cancel" xml:space="preserve">
    <value>Cancelar</value>
  </data>
  <data name="ChunkController_AcDelete" xml:space="preserve">
    <value>Deletar Chunk</value>
  </data>
  <data name="ChunkController_AcDeleteWithEName" xml:space="preserve">
    <value>Deletar Chunk "{0}"</value>
  </data>
  <data name="ChunkController_AcDeprocess" xml:space="preserve">
    <value>Desprocessar o Chunk</value>
  </data>
  <data name="ChunkController_AcDeprocessWithEName" xml:space="preserve">
    <value>Desprocessar o Chunk "{0}"</value>
  </data>
  <data name="Controller_NoOptionsAvailable" xml:space="preserve">
    <value>Sem opções disponíveis.</value>
  </data>
  <data name="DemoEntryController_Text" xml:space="preserve">
    <value>Demo ({0})</value>
  </data>
  <data name="EntryController_AcDelete" xml:space="preserve">
    <value>Deletar Entrada "{0}"</value>
  </data>
  <data name="EntryController_AcDeprocess" xml:space="preserve">
    <value>Desprocessar Entrada "{0}"</value>
  </data>
  <data name="GameVersionForm_Message" xml:space="preserve">
    <value>Selecione uma versão do jogo pela lista abaixo. NTSC-U, NTSC-J, e PAL são todas suportadas.</value>
  </data>
  <data name="GameVersionForm_Prerelease" xml:space="preserve">
    <value>Versões de Pré-Lançamento</value>
  </data>
  <data name="GameVersionForm_Release" xml:space="preserve">
    <value>Versões Finais</value>
  </data>
  <data name="GameVersionForm_Text" xml:space="preserve">
    <value>Seleção de Versão do Jogo</value>
  </data>
  <data name="ModelEntryController_Text" xml:space="preserve">
    <value>Modelo ({0})</value>
  </data>
  <data name="MusicEntryController_Text" xml:space="preserve">
    <value>Música ({0})</value>
  </data>
  <data name="NormalChunkController_Text" xml:space="preserve">
    <value>Chunk {0}</value>
  </data>
  <data name="NSFController_AcAddNormalChunk" xml:space="preserve">
    <value>Adicionar Chunk</value>
  </data>
  <data name="NSFController_Text" xml:space="preserve">
    <value>Arquivo NSF</value>
  </data>
  <data name="OldAnimationEntryController_Text" xml:space="preserve">
    <value>Animação Antiga ({0})</value>
  </data>
  <data name="OldModelEntryController_Text" xml:space="preserve">
    <value>Modelo Antigo ({0})</value>
  </data>
  <data name="OldMusicEntryController_Text" xml:space="preserve">
    <value>Música Antiga ({0})</value>
  </data>
  <data name="OldSceneryEntryController_Text" xml:space="preserve">
    <value>Cenário Antigo ({0})</value>
  </data>
  <data name="OldSoundChunkController_Text" xml:space="preserve">
    <value>Chunk de Som Antigo {0}</value>
  </data>
  <data name="ImageEntryController_Text" xml:space="preserve">
    <value>Imagem ({0})</value>
  </data>
  <data name="MapEntryController_Text" xml:space="preserve">
    <value>Mapa ({0})</value>
  </data>
  <data name="OldZoneEntryController_Text" xml:space="preserve">
    <value>Zona Antiga ({0})</value>
  </data>
  <data name="PaletteEntryController_Text" xml:space="preserve">
    <value>Paleta ({0})</value>
  </data>
  <data name="SceneryEntryController_Text" xml:space="preserve">
    <value>Cenário ({0})</value>
  </data>
  <data name="SoundChunkController_Text" xml:space="preserve">
    <value>Chunk de Sons {0}</value>
  </data>
  <data name="SoundEntryController_Text" xml:space="preserve">
    <value>Som ({0})</value>
  </data>
  <data name="SpeechChunkController_Text" xml:space="preserve">
    <value>Chunk de Fala{0}</value>
  </data>
  <data name="SpeechEntryController_Text" xml:space="preserve">
    <value>Fala ({0})</value>
  </data>
  <data name="T11EntryController_Text" xml:space="preserve">
    <value>T11 ({0})</value>
  </data>
  <data name="T15EntryController_Text" xml:space="preserve">
    <value>T15 ({0})</value>
  </data>
  <data name="T17EntryController_Text" xml:space="preserve">
    <value>T17 ({0})</value>
  </data>
  <data name="T1EntryController_Text" xml:space="preserve">
    <value>T1 ({0})</value>
  </data>
  <data name="ColoredAnimationEntryController_Text" xml:space="preserve">
    <value>Animação Colorida ({0})</value>
  </data>
  <data name="T21EntryController_Text" xml:space="preserve">
    <value>T21 ({0})</value>
  </data>
  <data name="SLSTEntryController_Text" xml:space="preserve">
    <value>Lista de Classificacão ({0})</value>
  </data>
  <data name="T6EntryController_Text" xml:space="preserve">
    <value>T6 ({0})</value>
  </data>
  <data name="TextureChunkController_Text" xml:space="preserve">
    <value>Chunk de Textura{1} ({0})</value>
  </data>
  <data name="UnprocessedChunkController_AcProcess" xml:space="preserve">
    <value>Processar Chunk</value>
  </data>
  <data name="UnprocessedChunkController_Text" xml:space="preserve">
    <value>Chunk Desprocessado {1} (T{0})</value>
  </data>
  <data name="UnprocessedEntryController_Text" xml:space="preserve">
    <value>Desprocessado T{0} ({1})</value>
  </data>
  <data name="WavebankChunkController_Text" xml:space="preserve">
    <value>Chunk do Banco de Ondas (wavebank){0}</value>
  </data>
  <data name="WavebankEntryController_Text" xml:space="preserve">
    <value>Banco de Ondas (wavebank) ({0})</value>
  </data>
  <data name="ZoneEntryController_Text" xml:space="preserve">
    <value>Zona ({0})</value>
  </data>
  <data name="ProtoZoneEntryController_Text" xml:space="preserve">
    <value>Zona (Protótipo) ({0})</value>
  </data>
  <data name="AnimationEntryController_Text" xml:space="preserve">
    <value>Animação ({0})</value>
  </data>
  <data name="EntityController_Text" xml:space="preserve">
    <value>Entidade</value>
  </data>
  <data name="FrameController_Text" xml:space="preserve">
    <value>Quadro</value>
  </data>
  <data name="ItemController_Text" xml:space="preserve">
    <value>Item</value>
  </data>
  <data name="ProtoAnimationEntryController_Text" xml:space="preserve">
    <value>Animação (Protótipo) ({0})</value>
  </data>
  <data name="GOOLv0EntryController_Text" xml:space="preserve">
    <value>GOOL (Protótipo) ({0})</value>
  </data>
  <data name="GOOLv1EntryController_Text" xml:space="preserve">
    <value>GOOL ({0})</value>
  </data>
  <data name="GOOLv2EntryController_Text" xml:space="preserve">
    <value>GOOLv2 ({0})</value>
  </data>
  <data name="GOOLv3EntryController_Text" xml:space="preserve">
    <value>GOOLv3 ({0})</value>
  </data>
  <data name="ModelEntryController_Compressed_Text" xml:space="preserve">
    <value>Modelo comprimido ({0})</value>
  </data>
  <data name="OldCameraController_Text" xml:space="preserve">
    <value>Câmera</value>
  </data>
  <data name="OldEntityController_Text" xml:space="preserve">
    <value>Entidade {0} ({1}-{2})</value>
  </data>
  <data name="OldSLSTEntryController_Text" xml:space="preserve">
    <value>Lista de Classificacão Antiga ({0})</value>
  </data>
  <data name="ProtoSceneryEntryController_Text" xml:space="preserve">
    <value>Cenário (Protótipo) ({0})</value>
  </data>
  <data name="EntryChunkController_AcAddNew" xml:space="preserve">
    <value>Adicionar uma nova Entrada</value>
  </data>
  <data name="EntryChunkController_AcImport" xml:space="preserve">
    <value>Importar uma Entrada</value>
  </data>
  <data name="EntryController_AcExport" xml:space="preserve">
    <value>Exportar uma Entrada "{0}"</value>
  </data>
  <data name="EntryController_AcRename" xml:space="preserve">
    <value>Renomear Entrada "{0}"</value>
  </data>
  <data name="NSFController_AcAddOldSoundChunk" xml:space="preserve">
    <value>Adicionar Chunk de Som Antigo</value>
  </data>
  <data name="NSFController_AcAddSoundChunk" xml:space="preserve">
    <value>Adicionar Chunk de Som</value>
  </data>
  <data name="NSFController_AcAddSpeechChunk" xml:space="preserve">
    <value>Adicionar Chunk de Fala</value>
  </data>
  <data name="NSFController_AcAddWavebankChunk" xml:space="preserve">
    <value>Adicionar Chunk de Banco de Ondas (wavebank)</value>
  </data>
  <data name="NSFController_AcFixBoxCount" xml:space="preserve">
    <value>Corrigir Contador de Caixas</value>
  </data>
  <data name="NSFController_AcFixDetonator" xml:space="preserve">
    <value>Corrigir Detonador de Nitros</value>
  </data>
  <data name="NSFController_AcImportChunk" xml:space="preserve">
    <value>Importar Chunk</value>
  </data>
  <data name="NSFController_AcShowLevel" xml:space="preserve">
    <value>Exibir todo o Cenário da fase</value>
  </data>
  <data name="TextureChunkController_AcRecalcChecksum" xml:space="preserve">
    <value>Recalculando a Soma de Checagem (checksum)</value>
  </data>
  <data name="TextureChunkController_AcRename" xml:space="preserve">
    <value>Renomear Chunk</value>
  </data>
  <data name="UnprocessedEntryController_AcProcess" xml:space="preserve">
    <value>Processar Entrada "{0}"</value>
  </data>
  <data name="ZoneEntryController_AcAddEntity" xml:space="preserve">
    <value>Adicionar Entidade</value>
  </data>
  <data name="TextureChunkController_AcOpenViewer" xml:space="preserve">
    <value>Abrir o Vizualizador</value>
  </data>
</root>